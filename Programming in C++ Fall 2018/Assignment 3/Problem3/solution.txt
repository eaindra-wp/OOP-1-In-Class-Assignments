/*
    CH08-320142
    a3_p3_testcritter.cpp
    Eaindra Wun Pyae
    e.wunpyae@jacobs-university.de
*/
#include <iostream>
#include <string>
#include <cstdlib>
#include "Critter.h"

using namespace std;

int main()
{
    string n;
    double he = 10;
    //default height

    //calling the empty constructor
	Critter *a;
    a = new Critter();
	a->print();

	//calling the constructor with name parameter
	Critter *c;
    c = new Critter("pooey");
	c->print();

	//calling the constructor with all parameters
	Critter *b;
	b = new Critter("Kitty" , 10, 2, 6);
	b->print();

	//calling the constructor without specifying the height
	Critter *d;
	d = new Critter("Kitty" , 10, 2, he);
    d->print();
}


/*
    CH08-320142
    a3_p3_Critter.cpp
    Eaindra Wun Pyae
    e.wunpyae@jacobs-university.de
*/
#include "Critter.h"
#include <iostream>
#include <string>
using namespace std;

//setter methods
void Critter::setName(string newname) {
	name = newname;
}

void Critter::setHunger(const int newhunger) {
	hunger = newhunger;
}
void Critter::setBoredom(int newboredom) {
	boredom = newboredom;
}
void Critter::setHeight(double newheight) {
	height = newheight;
}
void Critter::setChangeHunger(double newHunger)
{
    newHunger = double(hunger / 10);
    changeHunger = newHunger;
}
void Critter::print() {
	cout << "I am " << name << ". My hunger level is " << hunger << "." << endl;
	cout << "My height is " << height << " and my boredom is " << boredom << "." << endl;
}

//getter methods
double Critter::getHeight()
{
    return height;
}
int Critter::getBoredom()
{
    return boredom;
}
const int Critter::getHunger() const{
	return hunger;
}
double Critter::getChangeHunger()
{
    return changeHunger;
}

//default constructor
Critter::Critter() {
	name = "default_critter";
	hunger = 0;
	boredom = 0;
	height = 5;
	cout << "Default Constructor being called" << endl;
}
//constructor with name parameter
Critter::Critter(string n){
	name = n;
	hunger = 0;
	boredom = 0;
	height = 5;
	cout << "Constructor with name parameter being called" << endl;
}
//constructor with all parameters
Critter::Critter(string n, int hu, int bo, double he) {
	name = n;
    int changed = (int)changeHunger * 10;
    changed = hu;
	boredom = bo;
	height = he;
	cout << "Constructor with all parameters being called" << endl;
}


/*
    CH08-320142
    a3_p3_Critter.h
    Eaindra Wun Pyae
    e.wunpyae@jacobs-university.de
*/
#include <string>
using namespace std;
class Critter
{
private:  // data members are private
    std::string name;
    const int hunger;
    int boredom;
    double height;
    double changeHunger;

public: // business logic methods are public
    // constructors
    Critter(string n);
    Critter(string n, int hu, int bo, double he);
    Critter();

    // setter methods
    void setName(string newname);
    void setHunger(const int newhunger);
    void setBoredom(int newboredom);
    void setHeight(double newheight);
    void setChangeHunger(double newHunger);

    // getter methods
    int getHunger();
    double getHeight();
    int getBoredom();
    double getChangeHunger();
    // service method
    void print();
};
